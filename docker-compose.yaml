version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
    - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
    - zookeeper_data:/var/lib/zookeeper/data

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.3.1
    environment:
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    - KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE=false
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
    - zookeeper
    volumes:
    - kafka_data:/kafka/data

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.3.1
    environment:
    - SCHEMA_REGISTRY_HOST_NAME=schema-registry
    - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
    - SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL=WARN
    depends_on:
    - kafka

  mysql:
    container_name: mysql
    image: mysql:5.7 # 8.0 maybe?
    ports:
    - 3006:3006
    environment:
    - MYSQL_ROOT_PASSWORD=torunjug
    volumes:
    - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    - ./mysql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  connect:
    container_name: connect
    build: ./connect
    ports:
    - 8083:8083
    depends_on:
    - kafka
    - schema-registry
    environment:
    - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
    - CONNECT_CONFIG_STORAGE_TOPIC=connect-configs
    - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
    - CONNECT_OFFSET_STORAGE_TOPIC=connect-offsets
    - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
    - CONNECT_STATUS_STORAGE_TOPIC=connect-status
    - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
    - CONNECT_GROUP_ID=100
    - CONNECT_REST_ADVERTISED_HOST_NAME=connect
    - CONNECT_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
    - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
    - CONNECT_SCHEMA_REGISTRY_URL=http://schema-registry:8081
    - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
    - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
    - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components

  postgres:
    container_name: postgres
    image: postgres:12.0
    environment:
    - POSTGRES_PASSWORD=torunjug
    volumes:
    - ./postgres/init.sql:/docker-entrypoint-initdb.d/setup.sql

  mongo:
    container_name: mongo
    image: mongo:4.2
    volumes:
    - ./mongo/init.sh:/usr/local/bin/init.sh
    command: ["mongod", "--replSet", "rs0", "--auth"]

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
    ports:
    - 9200:9200
    environment:
    - discovery.type=single-node

volumes:
  zookeeper_data: {}
  kafka_data: {}
